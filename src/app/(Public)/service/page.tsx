import React from 'react';
import Nav from "@/components/nav/resnav";
import Footer from "@/components/footer/footer";
import { ServiceShowcaseSection } from "@/components/section/service/service";
import { headers } from 'next/headers';
import { HeroSection } from "@/components/section/service/hero"

// Mock data for service page
const mockServiceShowcaseContent = {
  en: {
    showcase_items: [
      {
        id: 1,
        title: "ERP Systems",
        description: "Complete business management solutions",
        icon: "üè¢"
      },
      {
        id: 2,
        title: "POS Solutions",
        description: "Modern point-of-sale systems",
        icon: "üí≥"
      },
      {
        id: 3,
        title: "Web Applications",
        description: "Custom web development",
        icon: "üåê"
      }
    ]
  },
  th: {
    showcase_items: [
      {
        id: 1,
        title: "‡∏£‡∏∞‡∏ö‡∏ö ERP",
        description: "‡πÇ‡∏ã‡∏•‡∏π‡∏ä‡∏±‡πà‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à‡∏Ñ‡∏£‡∏ö‡∏Ñ‡∏£‡∏±‡∏ô",
        icon: "üè¢"
      },
      {
        id: 2,
        title: "‡∏£‡∏∞‡∏ö‡∏ö POS", 
        description: "‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≤‡∏¢‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô‡∏™‡∏°‡∏±‡∏¢‡πÉ‡∏´‡∏°‡πà",
        icon: "üí≥"
      },
      {
        id: 3,
        title: "‡πÄ‡∏ß‡πá‡∏ö‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô",
        description: "‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£",
        icon: "üåê"
      }
    ]
  }
};

// Define the expected type for serviceShowcaseContent
interface ShowcaseSectionContent {
  showcase_items: any[]; // Use a more specific type if you have one for ShowcaseItem
}

export default async function ServicePage() {
  const headersList = headers();
  const locale = (await headersList).get('x-next-locale') || 'en';
  const serviceShowcaseContent = mockServiceShowcaseContent[locale as keyof typeof mockServiceShowcaseContent];

  // Type Guard and Assertion
  if (!serviceShowcaseContent || !('showcase_items' in serviceShowcaseContent) || !Array.isArray(serviceShowcaseContent.showcase_items)) {
    return <div>Error: Service Showcase content not found or invalid for {locale}</div>;
  }

  const typedShowcaseContent: ShowcaseSectionContent = serviceShowcaseContent as ShowcaseSectionContent;

  return (
    <>
      <Nav />
      <main className="w-full inset-0 ">
        <HeroSection />
        <ServiceShowcaseSection showcaseContent={typedShowcaseContent} />
      </main>
      <Footer />
    </>
  );
}